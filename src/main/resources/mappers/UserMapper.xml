<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.ssafy.luckyweeky.user.domain.repository.UserMapper">
    <!-- 사용자 추가 -->
    <insert id="insertUser" parameterType="userEntity">
        INSERT INTO User (
            user_id, username, email, password_hash, oauth_provider, oauth_id, birth_date, profile_image_key, last_login_at, created_at, updated_at
        )
        VALUES (
                   #{userId}, #{username}, #{email}, #{passwordHash}, #{oauthProvider}, #{oauthId},
                   #{birthDate}, #{profileImageKey}, null, now(), now()
               )
    </insert>

    <!--  사용자 비밀번호 salt 추가  -->
    <insert id="insertUserSalt" parameterType="userSaltEntity">
        INSERT INTO UserSalt (user_id, salt)
        VALUES (#{userId}, #{salt})
    </insert>

    <!-- user_id로 사용자 조회 -->
    <select id="findById" parameterType="long" resultType="userEntity">
        SELECT * FROM User WHERE user_id = #{userId}
    </select>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" parameterType="string" resultType="userEntity">
        SELECT * FROM User WHERE email = #{email}
    </select>

    <!-- 이메일로 salt 조회 -->
    <select id="findSaltByEmail" parameterType="string" resultType="string">
        SELECT us.salt
        FROM User u JOIN UserSalt us ON u.user_id = us.user_id
        WHERE u.email = #{email}
    </select>

    <!--  사용자 토큰 인스턴트 추가  -->
    <insert id="insertUserToken" parameterType="long">
        INSERT INTO usertoken (user_id) VALUES (#{userId})
    </insert>

    <!--  사용자 토큰 조회  -->
    <select id="findTokenById" parameterType="long" resultType="string">
        select token from usertoken where user_id = #{user_id}
    </select>

    <!--  사용자 토큰 업데이트  -->
    <update id="updateUserToken" parameterType="map">
        update usertoken set token = #{token} where user_id = #{userId}
    </update>

    <update id="deleteTokenById" parameterType="long">
        update usertoken set token = null where user_id = #{userId}
    </update>
</mapper>
